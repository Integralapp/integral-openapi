openapi: 3.0.1
info:
  title: api
  version: ''
paths:
  /key/create:
    post:
      description: >
        This endpoint is used to generate an API key for a given user.  This API
        key is for the Application User it is assigned for only, and only for
        your API.
      operationId: apiKeys_generate
      tags:
        - ApiKeys
      parameters: []
      responses:
        '200':
          description: Returns the API key object created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
      summary: Generate an API key
      security: &ref_0
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: >
                    This is a unique index on your database to find users.  This
                    will allow us to know which API key associates to each user
                    on your application's end.
                name:
                  type: string
                  nullable: true
                  description: >
                    This is the name of the key that will be indexed and shown
                    as a helpful human identifier for the key and it's relevant
                    information (logs, events, and errors).
                description:
                  type: string
                  nullable: true
                  description: >
                    Extra space for any additional metadata or information
                    needed to be applied on a key.
                isSandbox:
                  type: boolean
                  nullable: true
                  description: >
                    This value is a boolean to determine whether the key is for
                    Sandbox use only or not. If it is for sandbox use, it will
                    not be able to access real data and will only be able to
                    work with templated data.
              required:
                - userId
  /key/{userId}/production:
    get:
      description: >
        Retrieve a paginated list of production API keys for a given Application
        User
      operationId: apiKeys_retrieve-production
      tags:
        - ApiKeys
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: A range of number of keys wanted, min 1 and max 100. Default is 10.
          required: false
          schema:
            type: integer
            nullable: true
        - name: after
          in: query
          description: >-
            The ID of the previous page's last key (to retrieve the next set of
            rows)
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: >
            The response of this API request provides back a list of information
            on all generated production API keys for a given Application User.

            ** This list does contain revoked and paused API keys **
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKey'
      summary: Get Application User's Production API keys
      security: *ref_0
  /key/{userId}:
    get:
      description: >
        Retrieve a paginated list of sandbox API keys for a given Application
        User
      operationId: apiKeys_retrieve-sandbox
      tags:
        - ApiKeys
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: A range of number of keys wanted, min 1 and max 100. Default is 10.
          required: false
          schema:
            type: integer
            nullable: true
        - name: after
          in: query
          description: >-
            The ID of the previous page's last key (to retrieve the next set of
            rows)
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: >
            The response of this API request provides back a list of information
            on all generated sandbox API keys for a given Application User.

            ** This list does contain revoked and paused API keys **
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKey'
      summary: Get Application User's Sandbox API keys
      security: *ref_0
  /key/pause:
    put:
      description: >
        Given an API Key generated for your application's user, this endpoint
        allows you to pause the API key (temporarily stopping any API requests
        from being processed on it).
      operationId: apiKeys_pause
      tags:
        - ApiKeys
      parameters: []
      responses:
        '200':
          description: >-
            The response of this API request gives back information on
            Application User's API Key that temporarily can't make API requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
      summary: Pause an API key
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apiKey:
                  type: string
                  description: >-
                    This API key is generated by Integral and passed to the
                    Application User.
              required:
                - apiKey
  /key/unpause:
    put:
      description: >
        Given an API Key generated for your application's user, this endpoint
        allows you to unpause the given API key.
      operationId: apiKeys_unpause
      tags:
        - ApiKeys
      parameters: []
      responses:
        '200':
          description: >-
            The response of this API request gives back information on
            Application User's API Key that can now successfully make API
            requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
      summary: Unpause an API key
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apiKey:
                  type: string
                  description: >-
                    This API key is generated by Integral and passed to the
                    Application User.
              required:
                - apiKey
  /key/revoke:
    delete:
      description: >
        This endpoint is used to revoke a key. 

        Revoking an API key makes all of the key's data read only (logs, events,
        and errors), but no longer able to continue making requests.

        Once a key is revoked, it can never be used to make an API request
        again.
      operationId: apiKeys_revoke
      tags:
        - ApiKeys
      parameters: []
      responses:
        '200':
          description: >-
            The response of this API request gives back information on an
            Application User's API Key that was revoked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
      summary: Revoke an API Key
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apiKey:
                  type: string
                  description: >-
                    This API key is generated by Integral and passed to the
                    Application User.
              required:
                - apiKey
  /key/rotate:
    put:
      description: >
        This endpoint allows you to set a time for the given key to be revoked
        (at given time intervals).  It also creates a new key that holds all the
        previous key's logs and information, to allow you to continue making
        requests with it.
      operationId: apiKeys_rotate
      tags:
        - ApiKeys
      parameters: []
      responses:
        '200':
          description: >-
            The response of this API request gives back information on an
            Application User's API Key that was revoked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
      summary: Rotate an API Key
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apiKey:
                  type: string
                  description: >-
                    This API key is generated by Integral and passed to the
                    Application User.
                expiresIn:
                  $ref: '#/components/schemas/RotateTimings'
                  description: >-
                    A human readable determined enum value of either `now`,
                    `1h`, `24h`, `3d`, or `7d` of when we should revoke the
                    given key
              required:
                - apiKey
                - expiresIn
  /user:
    post:
      description: >
        Use this endpoint to create an application user. With an application
        user, you define an 'API key owner' that holds top level information
        that is constant for all API keys made for a user
      operationId: applicationUser_create
      tags:
        - ApplicationUser
      parameters: []
      responses:
        '200':
          description: Response fields to create an application user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUserCreateResponse'
      summary: Create an Application User
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: >
                    This is a unique index on your database to find users.  This
                    will allow us to know which API key associates to each user
                    on your application's end.
                tierId:
                  type: string
                  description: >
                    This is an ID provided by Integral to reference an
                    application tier you would like to assign for this user. You
                    can find the application tier IDs by sending a GET request
                    to the `/public/tiers` endpoint.
                description:
                  type: string
                  nullable: true
                  description: Generic description to describe the given Application User
                metadata:
                  type: object
                  additionalProperties: true
                  nullable: true
                  description: >-
                    Any relevant metadata helpful in searching or indexing
                    information on a user.
              required:
                - userId
                - tierId
  /user/{userId}:
    get:
      description: >-
        This endpoint takes in an Application User's ID and returns back
        relevant information about the user, including the given application and
        tier.
      operationId: applicationUser_get
      tags:
        - ApplicationUser
      parameters:
        - name: userId
          in: path
          description: >
            This is a unique index on your database to find users.  This will
            allow us to know which API key associates to each user on your
            application's end.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            Response body for the Retrieve endpoint of a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUser'
      summary: Get an Application User
      security: *ref_0
  /logs:
    get:
      description: >
        Returns back paginated list of logs for a given application, with
        minimum of 1 log and maximum of 100 logs per request
      operationId: logs_get-logs-by-application
      tags:
        - Logs
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            nullable: true
        - name: starting_after
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: user_id
          in: query
          description: >-
            The user ID of the user you want the logs for on a given
            application, from your user table
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Paginated logs to understand recent application data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogsByApplicationResponse'
      summary: Get Logs by Application
      security: *ref_0
  /parse/pre-process:
    post:
      description: >
        This endpoint should be put in the pre-processing middleware: 
        Authentication, Access Control, Dynamic Rate Limiting, Idempotency,
        Versioning, Sandbox, and more.
      operationId: parse_pre-process
      tags:
        - Parse
      parameters: []
      responses:
        '200':
          description: >
            The response of this API request can vary to return back matched
            sandbox data, a graceful and informative error, or information for
            you to know which user is accessing your API and some general
            information about the incoming request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreProcessApiResponse'
      summary: Pre-Process Your Public API
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apiKey:
                  type: string
                  description: >
                    This API key is the key passed in by your API’s user. This
                    is crucial for us to parse out your application’s user
                ip:
                  type: string
                  description: >-
                    IP address of the incoming request so we can rate limit on
                    top of it.
                method:
                  type: string
                  description: >
                    HTTP method of the incoming request Allowed values: `GET`,
                    `POST`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`, `CONNECT`,
                    `TRACE`
                requestBody:
                  type: object
                  additionalProperties: true
                  description: >
                    The request body from the incoming request from input
                    validation. Null if request method is a GET
                headers:
                  type: object
                  additionalProperties: true
                  description: |
                    Headers from the incoming request
                path:
                  type: string
                  description: >
                    Path (with all variables inside), from the request to match
                    endpoints created on the Integral platform.
                queryParams:
                  type: object
                  additionalProperties: true
                  description: >
                    The query parameters (parameters in the URL that come after
                    the base URL and ?) of a request object. Pass in an empty
                    object if it doesn’t exist.
                metadata:
                  type: object
                  additionalProperties: true
                  nullable: true
                  description: >
                    A single level key-value JSON object that can be used to
                    store custom data for the API request; keys and values must
                    be strings
                idempotencyKey:
                  type: string
                  nullable: true
                  description: >
                    This key is a **user generated** unique identifier to map to
                    a request. This allows requests to be safely retry requests
                    without the risk of duplicating operations.

                    `GET`, `PUT`, and `DELETE` are generally safe to retry
                    (according to standard REST practices). For `POST` and
                    `PATCH` requests, is recommended to send and store the
                    `idempotencyKey` in their system.
                version:
                  type: string
                  nullable: true
                  description: >
                    A value passed in for the version string of a given
                    request. 

                    This is not to be confused with the `version` field returned
                    on the `request` object in the response. This version is the
                    raw string passed in from the user.
              required:
                - apiKey
                - ip
                - method
                - requestBody
                - headers
                - path
                - queryParams
  /parse/post-process:
    post:
      description: >
        This endpoint only works in conjunction to the Pre-processing endpoint
        `POST /parse/pre-processing`.  Without it, the necessary information for
        this endpoint won't be found.
      operationId: parse_post-process
      tags:
        - Parse
      parameters: []
      responses:
        '200':
          description: >
            The response of this API request can vary to return back either a
            descriptive error message for you (not your user) to use for
            debugging, or information on the API request and the Idempotency Key
            provided (to indicate a successful operation).

            If idempotencyInfo does not exist for a given endpoint (the endpoint
            may not have it configured), then we will return back the request
            and idempotency key information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProcessApiResponse'
      summary: Post-Process Your Public API
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                endpointId:
                  type: string
                  description: >-
                    This endpoint ID is taken from the pre-processing endpoint
                    and passed in here.
                requestId:
                  type: string
                  description: >-
                    This request ID is taken from the pre-processing endpoint
                    and passed in here.
                responseStatusCode:
                  type: integer
                  description: >
                    This is the status code your API will respond with for the
                    given request. Must have a `2xx` status code.
                requestBody:
                  type: object
                  additionalProperties: true
                  description: >
                    This request body comes from expected return from your
                    services. If the same idempotency key is sent, then we'll
                    automatically return back this response body.
                apiKey:
                  type: string
                  description: >
                    This API key is the key passed in by your API's user. This
                    is crucial for us to parse out your application's user. You
                    can also find this apiKey returned by our pre-process
                    endpoint.
                idempotencyKey:
                  type: string
                  description: >
                    This key is a **user generated** unique identifier to map to
                    a request. This allows requests to be safely retry requests
                    without the risk of duplicating operations.

                    `GET`, `PUT`, and `DELETE` are generally safe to retry
                    (according to standard REST practices). For `POST` and
                    `PATCH` requests, is recommended to send and store the
                    `idempotencyKey` in their system.

                    **It will be returned to you by our pre-process endpoint for
                    consistency purposes.**
              required:
                - endpointId
                - requestId
                - responseStatusCode
                - requestBody
                - apiKey
                - idempotencyKey
  /tiers:
    get:
      description: >
        This request is used to fetch all the Tiers allowed to be assigned to a
        user, before creating one. Call this endpoint before creating an
        Application User
      operationId: tiers_get-all
      tags:
        - Tiers
      parameters: []
      responses:
        '200':
          description: >-
            The response of this API request provides back a list of information
            on all Application Tiers created for the given Application ID.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationTier'
      summary: Get All Application tiers
      security: *ref_0
components:
  schemas:
    RotateTimings:
      title: RotateTimings
      type: string
      enum:
        - now
        - 1h
        - 24h
        - 3d
        - 7d
    ApplicationUserCreateResponse:
      title: ApplicationUserCreateResponse
      type: object
      properties:
        applicationUser:
          $ref: '#/components/schemas/ApplicationUser'
        productionApiKey:
          type: string
        sandboxApiKey:
          type: string
      required:
        - applicationUser
        - productionApiKey
        - sandboxApiKey
    ApplicationUser:
      title: ApplicationUser
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        applicationUserForeignId:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
        applicationRole:
          $ref: '#/components/schemas/ApplicationRole'
        application:
          $ref: '#/components/schemas/Application'
      required:
        - id
        - createdAt
        - updatedAt
        - applicationUserForeignId
        - applicationRole
        - application
    ApplicationRole:
      title: ApplicationRole
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        role:
          type: string
        description:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - role
    Application:
      title: Application
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        name:
          type: string
        description:
          type: string
        publicId:
          type: string
        organization:
          $ref: '#/components/schemas/Organization'
        baseUrl:
          $ref: '#/components/schemas/ApplicationBaseUrl'
        ipRateLimit:
          type: integer
        amountPerInterval:
          type: string
          nullable: true
        timeInterval:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - description
        - publicId
        - organization
        - baseUrl
        - ipRateLimit
        - timeInterval
    Organization:
      title: Organization
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        name:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - name
    ApplicationBaseUrl:
      title: ApplicationBaseUrl
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        url:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - url
    ApiKey:
      title: ApiKey
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
        apiKey:
          type: string
        name:
          type: string
          nullable: true
        expiresAt:
          type: string
        description:
          type: string
          nullable: true
        isPaused:
          type: boolean
        isRevoked:
          type: boolean
        lastUsed:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - deletedAt
        - apiKey
        - expiresAt
        - isPaused
        - isRevoked
    ApplicationVersion:
      title: ApplicationVersion
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        version:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - version
    ApplicationBaseUrlEndpoint:
      title: ApplicationBaseUrlEndpoint
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        path:
          type: string
        name:
          type: string
        scopeKey:
          type: string
        description:
          type: string
        method:
          type: string
        queryParams:
          type: object
          additionalProperties: true
          nullable: true
        requestBody:
          type: object
          additionalProperties: true
          nullable: true
        requestHeaders:
          type: object
          additionalProperties: true
          nullable: true
        sandboxFieldLocation:
          type: string
          nullable: true
        sandboxFieldName:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - path
        - name
        - scopeKey
        - description
        - method
    Log:
      title: Log
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        user:
          $ref: '#/components/schemas/ApplicationUser'
        application:
          $ref: '#/components/schemas/Application'
        userApiKey:
          $ref: '#/components/schemas/ApiKey'
          nullable: true
        route:
          type: string
        method:
          type: string
        body:
          type: object
          additionalProperties: true
          nullable: true
        headers:
          type: object
          additionalProperties: true
          nullable: true
        ip:
          type: string
        isSandbox:
          type: boolean
        metadata:
          type: object
          additionalProperties: true
          nullable: true
        version:
          type: string
          nullable: true
        endpoint:
          $ref: '#/components/schemas/ApplicationBaseUrlEndpoint'
          nullable: true
        responseStatusCode:
          type: integer
          nullable: true
        responseBody:
          type: object
          additionalProperties: true
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
        - user
        - application
        - route
        - method
        - ip
        - isSandbox
    GetLogsByApplicationResponse:
      title: GetLogsByApplicationResponse
      type: object
      properties:
        logs:
          type: array
          items:
            $ref: '#/components/schemas/Log'
        hasNextPage:
          type: boolean
      required:
        - logs
        - hasNextPage
    PreProcessApiResponse:
      title: PreProcessApiResponse
      type: object
      properties:
        request:
          $ref: '#/components/schemas/RequestPreProcessResponse'
        statusCode:
          type: integer
        user:
          $ref: '#/components/schemas/UserParseResponse'
        application:
          $ref: '#/components/schemas/ApplicationParseResponse'
        returnBackToUser:
          $ref: '#/components/schemas/ReturnBackToUserUnionType'
          nullable: true
      required:
        - request
        - statusCode
        - user
        - application
    PostProcessApiResponse:
      title: PostProcessApiResponse
      type: object
      properties:
        request:
          $ref: '#/components/schemas/RequestType'
        idempotencyKey:
          $ref: '#/components/schemas/IdempotencyKeyType'
      required:
        - request
        - idempotencyKey
    RequestType:
      title: RequestType
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        userApiKey:
          type: object
          additionalProperties: true
        route:
          type: string
        method:
          type: string
        headers:
          type: object
          additionalProperties: true
        traceback:
          type: object
          additionalProperties: true
          nullable: true
        ip:
          type: string
        isSandbox:
          type: boolean
        metadata:
          type: object
          additionalProperties: true
          nullable: true
        responseStatusCode:
          type: integer
        responseBody:
          type: object
          additionalProperties: true
      required:
        - id
        - createdAt
        - updatedAt
        - userApiKey
        - route
        - method
        - headers
        - ip
        - isSandbox
        - responseStatusCode
        - responseBody
    IdempotencyKeyType:
      title: IdempotencyKeyType
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        key:
          type: string
        endpoint:
          type: object
          additionalProperties: true
        expiresAt:
          type: string
        apiKey:
          type: object
          additionalProperties: true
        responseStatusCode:
          type: integer
          nullable: true
        responseBody:
          type: object
          additionalProperties: true
      required:
        - id
        - createdAt
        - updatedAt
        - key
        - endpoint
        - expiresAt
        - apiKey
        - responseBody
    ReturnBackToUserUnionType:
      title: ReturnBackToUserUnionType
      oneOf:
        - $ref: '#/components/schemas/ReturnBackToUserErrorResponse'
        - type: object
          additionalProperties: true
    ReturnBackToUserErrorResponse:
      title: ReturnBackToUserErrorResponse
      type: object
      properties:
        message:
          type: string
        solution:
          type: string
        apiKey:
          type: string
          nullable: true
        error:
          type: boolean
          nullable: true
        errorCode:
          type: string
        displayMessage:
          type: string
        documentationUrl:
          type: string
          nullable: true
        causes:
          type: string
          nullable: true
      required:
        - message
        - solution
        - errorCode
        - displayMessage
    ApplicationParseResponse:
      title: ApplicationParseResponse
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        name:
          type: string
        description:
          type: string
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - description
    UserParseResponse:
      title: UserParseResponse
      type: object
      properties:
        integralId:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
        userId:
          type: string
        isAllowlistedOnEndpoint:
          type: boolean
        createdAt:
          type: string
          nullable: true
        updatedAt:
          type: string
          nullable: true
        deletedAt:
          type: string
          nullable: true
        idempotencyKey:
          type: string
          nullable: true
      required:
        - integralId
        - userId
        - isAllowlistedOnEndpoint
    RequestPreProcessResponse:
      title: RequestPreProcessResponse
      type: object
      properties:
        hasResponseContent:
          type: boolean
        environment:
          type: string
        id:
          type: string
        version:
          type: string
          nullable: true
        endpoint:
          $ref: '#/components/schemas/EndpointPreProcessType'
      required:
        - hasResponseContent
        - environment
        - id
        - endpoint
    EndpointPreProcessType:
      title: EndpointPreProcessType
      type: object
      properties:
        id:
          type: string
      required:
        - id
    ApplicationTier:
      title: ApplicationTier
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        role:
          type: string
        description:
          type: string
        application:
          $ref: '#/components/schemas/Application'
        applicationRateLimit:
          $ref: '#/components/schemas/ApplicationRateLimit'
      required:
        - id
        - createdAt
        - updatedAt
        - role
        - description
        - application
        - applicationRateLimit
    ApplicationRateLimit:
      title: ApplicationRateLimit
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
          nullable: true
        numOfRequests:
          type: integer
          nullable: true
        timeInterval:
          type: string
          nullable: true
      required:
        - id
        - createdAt
        - updatedAt
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
servers:
  - url: https://api.integralapi.co/public
    description: Production
  - url: http://localhost:4000/public
    description: Local
